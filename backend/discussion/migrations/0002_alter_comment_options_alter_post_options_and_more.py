# Generated by Django 4.0.6 on 2023-12-24 07:11

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('discussion', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='comment',
            options={'verbose_name': '评论', 'verbose_name_plural': '评论'},
        ),
        migrations.AlterModelOptions(
            name='post',
            options={'verbose_name': '帖子', 'verbose_name_plural': '帖子'},
        ),
        migrations.AlterField(
            model_name='comment',
            name='content',
            field=models.TextField(verbose_name='评论内容'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='created_time',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='like_count',
            field=models.PositiveIntegerField(default=0, verbose_name='喜欢数量'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='liked',
            field=models.ManyToManyField(blank=True, related_name='comment_liked_by', to=settings.AUTH_USER_MODEL, verbose_name='喜欢用户'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='related_comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='discussion.comment', verbose_name='上级评论'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='related_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post', to='discussion.post', verbose_name='评论帖子'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='related_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='评论用户'),
        ),
        migrations.AlterField(
            model_name='post',
            name='comment_count',
            field=models.PositiveIntegerField(default=0, verbose_name='评论量'),
        ),
        migrations.AlterField(
            model_name='post',
            name='content',
            field=models.TextField(verbose_name='内容'),
        ),
        migrations.AlterField(
            model_name='post',
            name='created_time',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='post',
            name='images',
            field=models.JSONField(blank=True, default=list, verbose_name='图片'),
        ),
        migrations.AlterField(
            model_name='post',
            name='like_count',
            field=models.PositiveIntegerField(default=0, verbose_name='喜欢量'),
        ),
        migrations.AlterField(
            model_name='post',
            name='liked',
            field=models.ManyToManyField(blank=True, related_name='post_liked_by', to=settings.AUTH_USER_MODEL, verbose_name='喜欢用户'),
        ),
        migrations.AlterField(
            model_name='post',
            name='related_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussion_post', to=settings.AUTH_USER_MODEL, verbose_name='发贴用户'),
        ),
        migrations.AlterField(
            model_name='post',
            name='title',
            field=models.TextField(max_length=100, verbose_name='标题'),
        ),
        migrations.AlterField(
            model_name='post',
            name='visit_count',
            field=models.PositiveIntegerField(default=0, verbose_name='浏览量'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=django.contrib.postgres.indexes.GinIndex(fields=['title', 'content'], name='post_search_idx'),
        ),
    ]
